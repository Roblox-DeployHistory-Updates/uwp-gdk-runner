name: Decrypt & Extract MSIXVC
permissions: write-all

on:
  workflow_dispatch:
    inputs:
      msixvc_url:
        description: 'URL to the .msixvc file'
        required: true
        type: string

jobs:
  decrypt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Prepare variables
        id: prep
        run: |
          url='${{ github.event.inputs.msixvc_url }}'
          if [ -z "$url" ]; then echo "msixvc_url input is required." && exit 1; fi
          filename=$(basename "$url")
          if [ -z "$filename" ]; then echo "Couldn't determine filename from URL: $url" && exit 1; fi
          decryptedName="${filename%.msixvc}.decrypted.msixvc"
          outputDir="unpacked-output"
          releaseName="${filename%.*}"

          echo "url=$url" >> $GITHUB_ENV
          echo "filename=$filename" >> $GITHUB_ENV
          echo "decryptedName=$decryptedName" >> $GITHUB_ENV
          echo "outputDir=$outputDir" >> $GITHUB_ENV
          echo "releaseName=$releaseName" >> $GITHUB_ENV

      - name: Download MSIXVC
        run: |
          echo "Downloading $filename from $url"
          curl -L "$url" -o "$filename"
          ls -lh "$filename"

      - name: Download Products Info
        run: |
          productUrl="https://displaycatalog.mp.microsoft.com/v7.0/products?bigIds=9PMF91N3LZ3M&market=US&languages=en-US,neutral&MS-CV=DGU1mcuYo0WMMp+F.1"
          curl -L "$productUrl" -o "products.json"

      - name: Download XVDTool (v0.53)
        run: |
          curl -sSL "https://github.com/emoose/xvdtool/releases/download/v0.53/XVDTool-0.53.0.0-linux-x64.zip" -o XVDTool.zip
          mkdir -p XVDTool
          unzip -q -o XVDTool.zip -d XVDTool
          chmod +x XVDTool/XVDTool
          curl -o /tmp/libssl1.1.deb http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1f-1ubuntu2.24_amd64.deb
          sudo dpkg -i /tmp/libssl1.1.deb

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1.x'

      - name: Decrypt the .msixvc (using xvdtool)
        run: |
          cp "$filename" "$decryptedName"
          decryptedPath="$(realpath "$decryptedName")"
          echo "Running decrypt on: $decryptedPath"
          XVDTool/XVDTool -nd -eu -cik "5ef5d34b-1201-d8dd-921f-635e939947e0" -cikfile "5ef5d34b-1201-d8dd-921f-635e939947e0.cik" "$decryptedPath"
          if [ $? -ne 0 ]; then echo "xvdtool decrypt command failed." && exit 1; fi

      - name: Extract and zip files from decrypted .msixvc
        run: |
          decryptedPath="$(realpath "$decryptedName")"
          outdir="$outputDir"
          mkdir -p "$outdir"
          echo "Extracting to $outdir ..."
          XVDTool/XVDTool -nd -xf "$outdir" "$decryptedPath"
          if [ $? -ne 0 ]; then echo "xvdtool extract command failed." && exit 1; fi
          zip -r "${releaseName}-unpacked.zip" "$outdir"


      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.filename }},${{ env.decryptedName }},${{ env.releaseName }}-unpacked.zip,products.json"
          tag: ${{ env.releaseName }}
          name: ${{ env.releaseName }}
          body: ${{ env.releaseName }}
